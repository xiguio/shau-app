<template>
	<view class="login-page">
		<view class="login-panel">
			<text class="title">{{systemInfo.name}}</text>
			<!-- #ifndef APP-PLUS -->
			<button class="login-button" :loading="isPending" :disabled="isPending" type="primary"open-type="getUserInfo" @getuserinfo="onUniLogin">
				一键登录
			</button>
			<!-- #endif -->
		</view>
	</view>
</template>

<script>
	import { mapState } from 'vuex';
	import { uniLogin, uniGetUserInfo, loginCallBack } from '../../common/util.js';
	import { ProxyWechatMPLogin, ProxyQQMPLogin } from '@/proxies/auth.js';
	
	export default {
		data() {
			return {
				isPending: false,
			}
		},
		computed: {
			...mapState(['systemInfo'])
		},
		methods: {
			// 授权登录
			async onUniLogin(e) {
				if (e.detail.errMsg !== 'getUserInfo:ok') {
				  if (e.detail.errMsg === 'getUserInfo:fail auth deny') {
					return false
				  }
				  uni.showToast({
					title: '登录失败',
					icon: 'none'
				  })
				  return false
				}
				this.isPending = true;
				const code = await uniLogin();
				const uniUserInfo = await uniGetUserInfo();
				const inviter = uni.getStorageSync('inviter');
				const params = {
					code,
					inviter,
					userInfo: uniUserInfo,
				};
				// #ifdef MP-WEIXIN
				const res = await ProxyWechatMPLogin(params);
				// #endif
				// #ifdef MP-QQ
				const res = await ProxyQQMPLogin(params);
				// #endif
				setTimeout(() => {
					this.isPending = false;
				}, 800);
				if (res.success) {
					this.handleLoginCallback(res.data);
				}
			},
			handleLoginCallback(data) {
				const { token, userInfo } = data;
				this.cacheUserToken(token);
				this.cacheUserInfo(userInfo);
				loginCallBack();
			},
			cacheUserToken(token) {
				this.$store.commit('login', token);
				uni.setStorageSync('token', token);
			},
			cacheUserInfo(userInfo) {
				this.$store.commit('setUserInfo', userInfo);
				uni.setStorageSync('userInfo', JSON.stringify(userInfo));
			},
		}
		
	}
</script>

<style lang="scss" scoped>
.login-page {
	flex: 1;
	padding: 30rpx;
	justify-content: center;
}
.title {
	font-size: 48rpx;
	margin-bottom: 66rpx;
	text-align: center;
}
.login-panel {
	margin-top: 20vh;
}
.login-button {
    border-radius: 20px;
    height: 80rpx;
    line-height: 80rpx;
    font-size: 36rpx;
    margin: 10rpx 30rpx;
}
.login-button::after {
	border: none;
}
</style>
